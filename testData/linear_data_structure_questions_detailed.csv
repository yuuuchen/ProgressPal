學生提問,參與度,學習狀態,教材list
陣列和鏈結串列在記憶體配置上有什麼不同？,high,初學,"""陣列 (Array) 的記憶體配置：連續配置 (Contiguous Allocation)：陣列在記憶體中會配置一塊連續的空間，所有元素依序排放。"",""陣列：固定大小 (Fixed Size)：在大多數語言中，陣列建立時需要指定長度，因為必須一次保留好整塊連續空間。"",""陣列：隨機存取 (Random Access)：由於元素位置可透過索引直接計算（起始位址 + 索引 × 元素大小），所以存取速度快（O(1)）。"", ""鏈結串列 (Linked List) 的記憶體配置：非連續配置 (Non-contiguous Allocation)：鏈結串列的節點可以分散在記憶體不同位置。"",""鏈結串列：動態大小 (Dynamic Size)：新增節點時只需額外配置一個新節點，不需要搬移或重新配置整塊空間。"",""鏈結串列：額外指標 (Extra Pointer)：每個節點除了資料外，還需要存放一個指向下一個節點的參考，因此會有額外記憶體開銷。"",""鏈結串列：順序存取 (Sequential Access)：存取某個節點必須從頭開始逐一走訪，存取效率較低（O(n)）。"""
什麼情況下會使用堆疊而不是陣列？,low,初學,"""堆疊：後進先出 (LIFO) 結構，適合處理需要反轉順序的情境，例如函式呼叫或括號配對。"",""陣列：雖然也能模擬堆疊，但擴充性差，大小固定。"",""堆疊：可用鏈結串列實作，能動態增減元素，避免固定大小限制。"""
單向鏈結串列如何插入新節點？,high,初學,"""鏈結串列：插入步驟包含建立新節點，設定新節點指標指向後繼節點，再將前一節點指向新節點。"",""若插入在開頭，需更新 head 指標指向新節點。"",""此過程時間複雜度為 O(1)，不需搬移其他節點。"""
陣列要怎麼表示柱列？,low,初學,"""柱列 (Queue)：先進先出 (FIFO) 結構，可用陣列儲存元素。"",""需維護 front 與 rear 指標分別代表頭尾。"",""當 rear 到達陣列末端時可採循環陣列 (circular array) 解決空間浪費問題。"""
堆疊溢位 (stack overflow) 是什麼意思？,low,初學,"""堆疊溢位：當堆疊已滿卻繼續 push 元素時發生。"",""在程式執行時，遞迴過深也可能導致呼叫堆疊溢位。"",""這通常會造成程式錯誤或當機。"""
雙向鏈結串列和單向鏈結串列的差別是什麼？,high,初學,"""單向鏈結串列：每個節點只存資料與下一個節點的指標。"",""雙向鏈結串列：每個節點除了下一個指標外，還有一個指向前一個節點的指標。"",""雙向鏈結串列插入刪除較靈活，但記憶體需求較高。"""
柱列在作業系統中有什麼應用？,high,初學,"""柱列：常用於排程 (scheduling)，例如 CPU 排程、印表機工作排程。"",""作業系統利用先進先出的特性，確保任務依序處理。"",""也可應用於多工處理的資源共享。"""
為什麼鏈結串列不能像陣列一樣用索引直接存取？,low,初學,"""陣列：透過起始位址與索引可直接計算目標元素位置 (O(1))。"",""鏈結串列：節點分散，必須從 head 開始逐一走訪才能找到特定節點 (O(n))。"",""因此鏈結串列無法支援快速隨機存取。"""
如何用堆疊檢查括號是否正確配對？,high,初學,"""建立一個空堆疊，逐一讀取字元。"",""遇到左括號則 push 進堆疊，遇到右括號則檢查堆疊頂端是否有對應的左括號。"",""最後若堆疊為空，代表括號配對正確；否則不正確。"""
柱列和堆疊的主要差異是什麼？,low,初學,"""堆疊：後進先出 (LIFO)。"",""柱列：先進先出 (FIFO)。"",""堆疊應用於反轉序列，柱列應用於排程或資源共享。"""
如何在鏈結串列中刪除一個指定值的節點？,high,初學,"""遍歷鏈結串列找到目標值節點。"",""更新前一節點的指標，跳過該節點指向下一個節點。"",""若刪除的是頭節點，需更新 head 指標。"""
陣列有什麼缺點？,low,初學,"""陣列大小固定，無法動態調整。"",""插入或刪除元素需要搬移大量資料，效率低。"",""記憶體必須連續配置，可能造成空間浪費。"""

